{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\markj\\\\cuisining\\\\src\\\\components\\\\S.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport { GoogleLogin } from \"@react-oauth/google\";\nimport FacebookLogin from \"react-facebook-login\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst SignUpForm = () => {\n  _s();\n  const [focus, setFocus] = useState({\n    name: false,\n    username: false,\n    password: false,\n    confirmPassword: false,\n    email: false\n  });\n  const [showPassword, setShowPassword] = useState(false); // State for toggling password visibility\n  const [showConfirmPassword, setShowConfirmPassword] = useState(false); // State for confirming password visibility\n  const [usernameTaken, setUsernameTaken] = useState(\"\"); // State to handle username availability\n  const [passwordError, setPasswordError] = useState(\"\"); // State for password validation error\n  const [emailError, setEmailError] = useState(\"\"); // State for email validation error\n  const [email, setEmail] = useState(\"\"); // State to hold email\n  const [username, setUsername] = useState(\"\"); // State to hold username\n  const [password, setPassword] = useState(\"\"); // State to hold password\n  const [confirmPassword, setConfirmPassword] = useState(\"\"); // State for confirm password\n  const [loading, setLoading] = useState(false); // State for loading during form submission\n\n  // Simulate checking if a username is taken (replace with backend call if needed)\n  const checkUsernameAvailability = async username => {\n    setUsernameTaken(\"\"); // Reset previous error\n    if (username.length === 0) return; // Prevent empty checks\n    const response = await fetch(`http://localhost:5000/api/check-username?username=${username}`);\n    const data = await response.json();\n    if (data.taken) {\n      setUsernameTaken(\"Username is already taken\");\n    } else {\n      setUsernameTaken(\"Username is available\");\n    }\n  };\n\n  // Password validation\n  const validatePassword = password => {\n    if (password.length < 6) {\n      setPasswordError(\"Password must be at least 6 characters long.\");\n    } else {\n      setPasswordError(\"\");\n    }\n  };\n\n  // Email validation\n  const validateEmail = email => {\n    const emailRegex = /^[^\\s@]+@[^\\s@]+\\.[^\\s@]+$/;\n    if (!emailRegex.test(email)) {\n      setEmailError(\"Invalid email format.\");\n    } else {\n      setEmailError(\"\");\n    }\n  };\n\n  // Handle input focus\n  const handleFocus = field => setFocus(prev => ({\n    ...prev,\n    [field]: true\n  }));\n\n  // Handle input blur\n  const handleBlur = (field, value) => {\n    if (!value) setFocus(prev => ({\n      ...prev,\n      [field]: false\n    }));\n    if (field === \"password\") validatePassword(value); // Validate password on blur\n    if (field === \"email\") validateEmail(value); // Validate email on blur\n  };\n\n  // Handle confirm password change\n  const handleConfirmPasswordChange = e => {\n    setConfirmPassword(e.target.value);\n    if (e.target.value !== password) {\n      setPasswordError(\"Passwords do not match\");\n    } else {\n      setPasswordError(\"\");\n    }\n  };\n  const handleSubmit = async event => {\n    event.preventDefault();\n    setLoading(true);\n\n    // Additional validation checks\n    if (password !== confirmPassword) {\n      setLoading(false);\n      return alert(\"Passwords do not match\");\n    }\n    const formData = {\n      username,\n      password,\n      email\n    };\n    try {\n      const response = await fetch(\"http://localhost:5000/api/register\", {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify(formData)\n      });\n      const data = await response.json();\n      if (data.message) {\n        alert(data.message);\n      }\n      setLoading(false); // Stop loading after form submission\n    } catch (error) {\n      console.error(\"Error registering user:\", error);\n      alert(\"Error registering user. Please try again.\");\n      setLoading(false); // Stop loading after error\n    }\n  };\n\n  // Handle Google login success\n  const handleGoogleLogin = response => {\n    console.log(\"Google login response\", response);\n    // Here, you can send the response to your backend for further processing.\n  };\n\n  // Handle Facebook login success\n  const handleFacebookLogin = response => {\n    console.log(\"Facebook login response\", response);\n    // Handle response and send it to your backend.\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      backgroundImage: \"url('lbg.png')\",\n      backgroundSize: \"cover\",\n      backgroundPosition: \"center\",\n      backgroundAttachment: \"fixed\",\n      height: \"100%\",\n      width: \"100%\"\n    },\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        display: \"flex\",\n        justifyContent: \"center\",\n        alignItems: \"center\",\n        padding: \"20px\",\n        minHeight: \"100vh\"\n      },\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          background: \"rgba(255, 255, 255, 0.7)\",\n          backdropFilter: \"blur(10px)\",\n          WebkitBackdropFilter: \"blur(0px)\",\n          borderRadius: \"10px\",\n          padding: \"25px\",\n          boxShadow: \"0 4px 6px rgba(0, 0, 0, 0.1)\",\n          width: \"100%\",\n          maxWidth: \"400px\"\n        },\n        children: /*#__PURE__*/_jsxDEV(\"form\", {\n          onSubmit: handleSubmit,\n          children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n            style: {\n              textAlign: \"center\",\n              color: \"#363100\",\n              fontSize: \"2rem\",\n              marginBottom: \"20px\"\n            },\n            children: \"CUISINING\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 128,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"submit\",\n            disabled: loading,\n            style: {\n              width: \"100%\",\n              padding: \"10px\",\n              border: \"none\",\n              backgroundColor: \"#C1B857\",\n              color: \"#fff\",\n              borderRadius: \"5px\",\n              cursor: loading ? \"not-allowed\" : \"pointer\",\n              marginBottom: \"15px\",\n              opacity: loading ? \"0.5\" : \"1\"\n            },\n            children: loading ? \"Submitting...\" : \"Sign Up\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 132,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(GoogleLogin, {\n            onSuccess: handleGoogleLogin,\n            onError: error => console.error(\"Google login error\", error),\n            useOneTap: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 151,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(FacebookLogin, {\n            appId: \"your-facebook-app-id\",\n            autoLoad: false,\n            fields: \"name,email,picture\",\n            callback: handleFacebookLogin,\n            textButton: \"Sign Up with Facebook\",\n            cssClass: \"facebook-login-btn\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 158,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 127,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 126,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 125,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 124,\n    columnNumber: 5\n  }, this);\n};\n_s(SignUpForm, \"3bqnt1xErDNqeecgiQwYmbQyMsg=\");\n_c = SignUpForm;\nexport default SignUpForm;\nvar _c;\n$RefreshReg$(_c, \"SignUpForm\");","map":{"version":3,"names":["React","useState","GoogleLogin","FacebookLogin","jsxDEV","_jsxDEV","SignUpForm","_s","focus","setFocus","name","username","password","confirmPassword","email","showPassword","setShowPassword","showConfirmPassword","setShowConfirmPassword","usernameTaken","setUsernameTaken","passwordError","setPasswordError","emailError","setEmailError","setEmail","setUsername","setPassword","setConfirmPassword","loading","setLoading","checkUsernameAvailability","length","response","fetch","data","json","taken","validatePassword","validateEmail","emailRegex","test","handleFocus","field","prev","handleBlur","value","handleConfirmPasswordChange","e","target","handleSubmit","event","preventDefault","alert","formData","method","headers","body","JSON","stringify","message","error","console","handleGoogleLogin","log","handleFacebookLogin","style","backgroundImage","backgroundSize","backgroundPosition","backgroundAttachment","height","width","children","display","justifyContent","alignItems","padding","minHeight","background","backdropFilter","WebkitBackdropFilter","borderRadius","boxShadow","maxWidth","onSubmit","textAlign","color","fontSize","marginBottom","fileName","_jsxFileName","lineNumber","columnNumber","type","disabled","border","backgroundColor","cursor","opacity","onSuccess","onError","useOneTap","appId","autoLoad","fields","callback","textButton","cssClass","_c","$RefreshReg$"],"sources":["C:/Users/markj/cuisining/src/components/S.jsx"],"sourcesContent":["import React, { useState } from \"react\";\r\nimport { GoogleLogin } from \"@react-oauth/google\";\r\nimport FacebookLogin from \"react-facebook-login\";\r\n\r\nconst SignUpForm = () => {\r\n  const [focus, setFocus] = useState({\r\n    name: false,\r\n    username: false,\r\n    password: false,\r\n    confirmPassword: false,\r\n    email: false,\r\n  });\r\n\r\n  const [showPassword, setShowPassword] = useState(false); // State for toggling password visibility\r\n  const [showConfirmPassword, setShowConfirmPassword] = useState(false); // State for confirming password visibility\r\n  const [usernameTaken, setUsernameTaken] = useState(\"\"); // State to handle username availability\r\n  const [passwordError, setPasswordError] = useState(\"\"); // State for password validation error\r\n  const [emailError, setEmailError] = useState(\"\"); // State for email validation error\r\n  const [email, setEmail] = useState(\"\"); // State to hold email\r\n  const [username, setUsername] = useState(\"\"); // State to hold username\r\n  const [password, setPassword] = useState(\"\"); // State to hold password\r\n  const [confirmPassword, setConfirmPassword] = useState(\"\"); // State for confirm password\r\n  const [loading, setLoading] = useState(false); // State for loading during form submission\r\n\r\n  // Simulate checking if a username is taken (replace with backend call if needed)\r\n  const checkUsernameAvailability = async (username) => {\r\n    setUsernameTaken(\"\"); // Reset previous error\r\n    if (username.length === 0) return; // Prevent empty checks\r\n    const response = await fetch(`http://localhost:5000/api/check-username?username=${username}`);\r\n    const data = await response.json();\r\n    if (data.taken) {\r\n      setUsernameTaken(\"Username is already taken\");\r\n    } else {\r\n      setUsernameTaken(\"Username is available\");\r\n    }\r\n  };\r\n\r\n  // Password validation\r\n  const validatePassword = (password) => {\r\n    if (password.length < 6) {\r\n      setPasswordError(\"Password must be at least 6 characters long.\");\r\n    } else {\r\n      setPasswordError(\"\");\r\n    }\r\n  };\r\n\r\n  // Email validation\r\n  const validateEmail = (email) => {\r\n    const emailRegex = /^[^\\s@]+@[^\\s@]+\\.[^\\s@]+$/;\r\n    if (!emailRegex.test(email)) {\r\n      setEmailError(\"Invalid email format.\");\r\n    } else {\r\n      setEmailError(\"\");\r\n    }\r\n  };\r\n\r\n  // Handle input focus\r\n  const handleFocus = (field) => setFocus((prev) => ({ ...prev, [field]: true }));\r\n\r\n  // Handle input blur\r\n  const handleBlur = (field, value) => {\r\n    if (!value) setFocus((prev) => ({ ...prev, [field]: false }));\r\n    if (field === \"password\") validatePassword(value); // Validate password on blur\r\n    if (field === \"email\") validateEmail(value); // Validate email on blur\r\n  };\r\n\r\n  // Handle confirm password change\r\n  const handleConfirmPasswordChange = (e) => {\r\n    setConfirmPassword(e.target.value);\r\n    if (e.target.value !== password) {\r\n      setPasswordError(\"Passwords do not match\");\r\n    } else {\r\n      setPasswordError(\"\");\r\n    }\r\n  };\r\n\r\n  const handleSubmit = async (event) => {\r\n    event.preventDefault();\r\n    setLoading(true);\r\n\r\n    // Additional validation checks\r\n    if (password !== confirmPassword) {\r\n      setLoading(false);\r\n      return alert(\"Passwords do not match\");\r\n    }\r\n\r\n    const formData = { username, password, email };\r\n\r\n    try {\r\n      const response = await fetch(\"http://localhost:5000/api/register\", {\r\n        method: \"POST\",\r\n        headers: {\r\n          \"Content-Type\": \"application/json\",\r\n        },\r\n        body: JSON.stringify(formData),\r\n      });\r\n\r\n      const data = await response.json();\r\n      if (data.message) {\r\n        alert(data.message);\r\n      }\r\n\r\n      setLoading(false); // Stop loading after form submission\r\n    } catch (error) {\r\n      console.error(\"Error registering user:\", error);\r\n      alert(\"Error registering user. Please try again.\");\r\n      setLoading(false); // Stop loading after error\r\n    }\r\n  };\r\n\r\n  // Handle Google login success\r\n  const handleGoogleLogin = (response) => {\r\n    console.log(\"Google login response\", response);\r\n    // Here, you can send the response to your backend for further processing.\r\n  };\r\n\r\n  // Handle Facebook login success\r\n  const handleFacebookLogin = (response) => {\r\n    console.log(\"Facebook login response\", response);\r\n    // Handle response and send it to your backend.\r\n  };\r\n\r\n  return (\r\n    <div style={{ backgroundImage: \"url('lbg.png')\", backgroundSize: \"cover\", backgroundPosition: \"center\", backgroundAttachment: \"fixed\", height: \"100%\", width: \"100%\" }}>\r\n      <div style={{ display: \"flex\", justifyContent: \"center\", alignItems: \"center\", padding: \"20px\", minHeight: \"100vh\" }}>\r\n        <div style={{ background: \"rgba(255, 255, 255, 0.7)\", backdropFilter: \"blur(10px)\", WebkitBackdropFilter: \"blur(0px)\", borderRadius: \"10px\", padding: \"25px\", boxShadow: \"0 4px 6px rgba(0, 0, 0, 0.1)\", width: \"100%\", maxWidth: \"400px\" }}>\r\n          <form onSubmit={handleSubmit}>\r\n            <h2 style={{ textAlign: \"center\", color: \"#363100\", fontSize: \"2rem\", marginBottom: \"20px\" }}>CUISINING</h2>\r\n\r\n            {/* Your other form fields here */}\r\n\r\n            <button\r\n              type=\"submit\"\r\n              disabled={loading}\r\n              style={{\r\n                width: \"100%\",\r\n                padding: \"10px\",\r\n                border: \"none\",\r\n                backgroundColor: \"#C1B857\",\r\n                color: \"#fff\",\r\n                borderRadius: \"5px\",\r\n                cursor: loading ? \"not-allowed\" : \"pointer\",\r\n                marginBottom: \"15px\",\r\n                opacity: loading ? \"0.5\" : \"1\",\r\n              }}\r\n            >\r\n              {loading ? \"Submitting...\" : \"Sign Up\"}\r\n            </button>\r\n\r\n            {/* Google Sign Up Button */}\r\n            <GoogleLogin\r\n              onSuccess={handleGoogleLogin}\r\n              onError={(error) => console.error(\"Google login error\", error)}\r\n              useOneTap\r\n            />\r\n\r\n            {/* Facebook Sign Up Button */}\r\n            <FacebookLogin\r\n              appId=\"your-facebook-app-id\"\r\n              autoLoad={false}\r\n              fields=\"name,email,picture\"\r\n              callback={handleFacebookLogin}\r\n              textButton=\"Sign Up with Facebook\"\r\n              cssClass=\"facebook-login-btn\"\r\n            />\r\n          </form>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default SignUpForm;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}