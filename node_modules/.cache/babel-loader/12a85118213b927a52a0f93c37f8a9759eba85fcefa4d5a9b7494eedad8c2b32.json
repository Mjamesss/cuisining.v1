{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\markj\\\\cuisining\\\\src\\\\components\\\\S.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst SignUpForm = () => {\n  _s();\n  const [focus, setFocus] = useState({\n    name: false,\n    username: false,\n    password: false,\n    confirmPassword: false,\n    email: false\n  });\n  const [showPassword, setShowPassword] = useState(false);\n  const [showConfirmPassword, setShowConfirmPassword] = useState(false);\n  const [usernameTaken, setUsernameTaken] = useState(\"\");\n  const [passwordError, setPasswordError] = useState(\"\");\n  const [emailError, setEmailError] = useState(\"\");\n  const [email, setEmail] = useState(\"\");\n  const [username, setUsername] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [confirmPassword, setConfirmPassword] = useState(\"\");\n  const [loading, setLoading] = useState(false);\n\n  // Password validation\n  const validatePassword = password => {\n    if (password.length < 6) {\n      setPasswordError(\"Password must be at least 6 characters long.\");\n    } else {\n      setPasswordError(\"\");\n    }\n  };\n\n  // Email validation\n  const validateEmail = email => {\n    const emailRegex = /^[^\\s@]+@[^\\s@]+\\.[^\\s@]+$/;\n    if (!emailRegex.test(email)) {\n      setEmailError(\"Invalid email format.\");\n    } else {\n      setEmailError(\"\");\n    }\n  };\n\n  // Handle input focus\n  const handleFocus = field => setFocus(prev => ({\n    ...prev,\n    [field]: true\n  }));\n\n  // Handle input blur\n  const handleBlur = (field, value) => {\n    if (!value) setFocus(prev => ({\n      ...prev,\n      [field]: false\n    }));\n    if (field === \"password\") {\n      validatePassword(value);\n      setPasswordError(\"\"); // Reset error when typing new password\n    }\n    if (field === \"email\") {\n      validateEmail(value);\n    }\n  };\n\n  // Handle confirm password change\n  const handleConfirmPasswordChange = e => {\n    setConfirmPassword(e.target.value);\n    if (e.target.value !== password) {\n      setPasswordError(\"Passwords do not match\");\n    } else {\n      setPasswordError(\"\");\n    }\n  };\n\n  // Handle form submission\n  const handleSubmit = async event => {\n    event.preventDefault();\n    setLoading(true);\n    if (!email || !username || !password || !confirmPassword) {\n      alert(\"Please fill in all fields.\");\n      setLoading(false);\n      return;\n    }\n    if (password !== confirmPassword) {\n      setLoading(false);\n      return alert(\"Passwords do not match\");\n    }\n    const formData = {\n      username,\n      password,\n      email\n    };\n    try {\n      const response = await fetch(\"http://localhost:5000/register\", {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify(formData)\n      });\n      const result = await response.json();\n      if (response.ok) {\n        alert(\"Registration successful!\");\n      } else {\n        alert(result.message || \"An error occurred.\");\n      }\n    } catch (error) {\n      alert(\"Error registering user:\", error);\n    }\n    setLoading(false);\n  };\n\n  // Simulate checking if a username is available (e.g., via an API)\n  const checkUsernameAvailability = async username => {\n    try {\n      const response = await fetch(`/api/check-username/${username}`);\n      const data = await response.json();\n      if (!data.available) {\n        setUsernameTaken(\"Username is already taken.\");\n      } else {\n        setUsernameTaken(\"\");\n      }\n    } catch (err) {\n      console.error(\"Error checking username:\", err);\n      setUsernameTaken(\"Error checking username availability.\");\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    onSubmit: handleSubmit,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"Username\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 126,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        value: username,\n        onChange: e => {\n          setUsername(e.target.value);\n          checkUsernameAvailability(e.target.value);\n        },\n        onFocus: () => handleFocus(\"username\"),\n        onBlur: e => handleBlur(\"username\", e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 127,\n        columnNumber: 9\n      }, this), usernameTaken && /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          color: \"red\"\n        },\n        children: usernameTaken\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 137,\n        columnNumber: 27\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 125,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"Email\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 140,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"email\",\n        value: email,\n        onChange: e => setEmail(e.target.value),\n        onFocus: () => handleFocus(\"email\"),\n        onBlur: e => handleBlur(\"email\", e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 141,\n        columnNumber: 9\n      }, this), emailError && /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          color: \"red\"\n        },\n        children: emailError\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 148,\n        columnNumber: 24\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 139,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"Password\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 151,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: showPassword ? \"text\" : \"password\",\n        value: password,\n        onChange: e => {\n          setPassword(e.target.value);\n          validatePassword(e.target.value);\n        },\n        onFocus: () => handleFocus(\"password\"),\n        onBlur: e => handleBlur(\"password\", e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 152,\n        columnNumber: 9\n      }, this), passwordError && /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          color: \"red\"\n        },\n        children: passwordError\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 162,\n        columnNumber: 27\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 150,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"Confirm Password\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 165,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: showConfirmPassword ? \"text\" : \"password\",\n        value: confirmPassword,\n        onChange: handleConfirmPasswordChange,\n        onFocus: () => handleFocus(\"confirmPassword\"),\n        onBlur: e => handleBlur(\"confirmPassword\", e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 166,\n        columnNumber: 9\n      }, this), passwordError && /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          color: \"red\"\n        },\n        children: passwordError\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 173,\n        columnNumber: 27\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 164,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      type: \"submit\",\n      disabled: loading,\n      children: loading ? \"Registering...\" : \"Register\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 175,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 124,\n    columnNumber: 5\n  }, this);\n};\n_s(SignUpForm, \"3bqnt1xErDNqeecgiQwYmbQyMsg=\");\n_c = SignUpForm;\nexport default SignUpForm;\nvar _c;\n$RefreshReg$(_c, \"SignUpForm\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","SignUpForm","_s","focus","setFocus","name","username","password","confirmPassword","email","showPassword","setShowPassword","showConfirmPassword","setShowConfirmPassword","usernameTaken","setUsernameTaken","passwordError","setPasswordError","emailError","setEmailError","setEmail","setUsername","setPassword","setConfirmPassword","loading","setLoading","validatePassword","length","validateEmail","emailRegex","test","handleFocus","field","prev","handleBlur","value","handleConfirmPasswordChange","e","target","handleSubmit","event","preventDefault","alert","formData","response","fetch","method","headers","body","JSON","stringify","result","json","ok","message","error","checkUsernameAvailability","data","available","err","console","onSubmit","children","fileName","_jsxFileName","lineNumber","columnNumber","type","onChange","onFocus","onBlur","style","color","disabled","_c","$RefreshReg$"],"sources":["C:/Users/markj/cuisining/src/components/S.jsx"],"sourcesContent":["import React, { useState } from \"react\";\r\n\r\nconst SignUpForm = () => {\r\n  const [focus, setFocus] = useState({\r\n    name: false,\r\n    username: false,\r\n    password: false,\r\n    confirmPassword: false,\r\n    email: false,\r\n  });\r\n\r\n  const [showPassword, setShowPassword] = useState(false);\r\n  const [showConfirmPassword, setShowConfirmPassword] = useState(false);\r\n  const [usernameTaken, setUsernameTaken] = useState(\"\");\r\n  const [passwordError, setPasswordError] = useState(\"\");\r\n  const [emailError, setEmailError] = useState(\"\");\r\n  const [email, setEmail] = useState(\"\");\r\n  const [username, setUsername] = useState(\"\");\r\n  const [password, setPassword] = useState(\"\");\r\n  const [confirmPassword, setConfirmPassword] = useState(\"\");\r\n  const [loading, setLoading] = useState(false);\r\n\r\n  // Password validation\r\n  const validatePassword = (password) => {\r\n    if (password.length < 6) {\r\n      setPasswordError(\"Password must be at least 6 characters long.\");\r\n    } else {\r\n      setPasswordError(\"\");\r\n    }\r\n  };\r\n\r\n  // Email validation\r\n  const validateEmail = (email) => {\r\n    const emailRegex = /^[^\\s@]+@[^\\s@]+\\.[^\\s@]+$/;\r\n    if (!emailRegex.test(email)) {\r\n      setEmailError(\"Invalid email format.\");\r\n    } else {\r\n      setEmailError(\"\");\r\n    }\r\n  };\r\n\r\n  // Handle input focus\r\n  const handleFocus = (field) => setFocus((prev) => ({ ...prev, [field]: true }));\r\n\r\n  // Handle input blur\r\n  const handleBlur = (field, value) => {\r\n    if (!value) setFocus((prev) => ({ ...prev, [field]: false }));\r\n    if (field === \"password\") {\r\n      validatePassword(value);\r\n      setPasswordError(\"\"); // Reset error when typing new password\r\n    }\r\n    if (field === \"email\") {\r\n      validateEmail(value);\r\n    }\r\n  };\r\n\r\n  // Handle confirm password change\r\n  const handleConfirmPasswordChange = (e) => {\r\n    setConfirmPassword(e.target.value);\r\n    if (e.target.value !== password) {\r\n      setPasswordError(\"Passwords do not match\");\r\n    } else {\r\n      setPasswordError(\"\");\r\n    }\r\n  };\r\n\r\n  // Handle form submission\r\n  const handleSubmit = async (event) => {\r\n    event.preventDefault();\r\n    setLoading(true);\r\n\r\n    if (!email || !username || !password || !confirmPassword) {\r\n      alert(\"Please fill in all fields.\");\r\n      setLoading(false);\r\n      return;\r\n    }\r\n\r\n    if (password !== confirmPassword) {\r\n      setLoading(false);\r\n      return alert(\"Passwords do not match\");\r\n    }\r\n\r\n    const formData = { username, password, email };\r\n\r\n    try {\r\n      const response = await fetch(\"http://localhost:5000/register\", {\r\n        method: \"POST\",\r\n        headers: {\r\n          \"Content-Type\": \"application/json\",\r\n        },\r\n        body: JSON.stringify(formData),\r\n      });\r\n\r\n      const result = await response.json();\r\n      if (response.ok) {\r\n        alert(\"Registration successful!\");\r\n      } else {\r\n        alert(result.message || \"An error occurred.\");\r\n      }\r\n    } catch (error) {\r\n      alert(\"Error registering user:\", error);\r\n    }\r\n\r\n    setLoading(false);\r\n  };\r\n\r\n  // Simulate checking if a username is available (e.g., via an API)\r\n  const checkUsernameAvailability = async (username) => {\r\n    try {\r\n      const response = await fetch(`/api/check-username/${username}`);\r\n      const data = await response.json();\r\n      if (!data.available) {\r\n        setUsernameTaken(\"Username is already taken.\");\r\n      } else {\r\n        setUsernameTaken(\"\");\r\n      }\r\n    } catch (err) {\r\n      console.error(\"Error checking username:\", err);\r\n      setUsernameTaken(\"Error checking username availability.\");\r\n    }\r\n  };\r\n\r\n  return (\r\n    <form onSubmit={handleSubmit}>\r\n      <div>\r\n        <label>Username</label>\r\n        <input\r\n          type=\"text\"\r\n          value={username}\r\n          onChange={(e) => {\r\n            setUsername(e.target.value);\r\n            checkUsernameAvailability(e.target.value);\r\n          }}\r\n          onFocus={() => handleFocus(\"username\")}\r\n          onBlur={(e) => handleBlur(\"username\", e.target.value)}\r\n        />\r\n        {usernameTaken && <div style={{ color: \"red\" }}>{usernameTaken}</div>}\r\n      </div>\r\n      <div>\r\n        <label>Email</label>\r\n        <input\r\n          type=\"email\"\r\n          value={email}\r\n          onChange={(e) => setEmail(e.target.value)}\r\n          onFocus={() => handleFocus(\"email\")}\r\n          onBlur={(e) => handleBlur(\"email\", e.target.value)}\r\n        />\r\n        {emailError && <div style={{ color: \"red\" }}>{emailError}</div>}\r\n      </div>\r\n      <div>\r\n        <label>Password</label>\r\n        <input\r\n          type={showPassword ? \"text\" : \"password\"}\r\n          value={password}\r\n          onChange={(e) => {\r\n            setPassword(e.target.value);\r\n            validatePassword(e.target.value);\r\n          }}\r\n          onFocus={() => handleFocus(\"password\")}\r\n          onBlur={(e) => handleBlur(\"password\", e.target.value)}\r\n        />\r\n        {passwordError && <div style={{ color: \"red\" }}>{passwordError}</div>}\r\n      </div>\r\n      <div>\r\n        <label>Confirm Password</label>\r\n        <input\r\n          type={showConfirmPassword ? \"text\" : \"password\"}\r\n          value={confirmPassword}\r\n          onChange={handleConfirmPasswordChange}\r\n          onFocus={() => handleFocus(\"confirmPassword\")}\r\n          onBlur={(e) => handleBlur(\"confirmPassword\", e.target.value)}\r\n        />\r\n        {passwordError && <div style={{ color: \"red\" }}>{passwordError}</div>}\r\n      </div>\r\n      <button type=\"submit\" disabled={loading}>\r\n        {loading ? \"Registering...\" : \"Register\"}\r\n      </button>\r\n    </form>\r\n  );\r\n};\r\n\r\nexport default SignUpForm;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}