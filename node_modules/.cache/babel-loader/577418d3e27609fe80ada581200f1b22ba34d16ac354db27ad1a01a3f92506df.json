{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\markj\\\\cuisining\\\\src\\\\components\\\\Landing.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport { useNavigate } from \"react-router-dom\"; // Use useNavigate instead of useHistory\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst SuccessPage = () => {\n  _s();\n  const [email, setEmail] = useState(\"\");\n  const navigate = useNavigate(); // Hook for navigation\n\n  const styles = {\n    background: {\n      backgroundImage: \"url('lbg.png')\",\n      // Replace with your image URL\n      backgroundSize: \"cover\",\n      backgroundPosition: \"center\",\n      backgroundAttachment: \"fixed\",\n      height: \"100%\",\n      width: \"100%\"\n    },\n    formWrapper: {\n      display: \"flex\",\n      justifyContent: \"center\",\n      alignItems: \"center\",\n      padding: \"20px\",\n      minHeight: \"100vh\"\n    },\n    formContainer: {\n      background: \"rgba(255, 255, 255, 0.7)\",\n      backdropFilter: \"blur(10px)\",\n      WebkitBackdropFilter: \"blur(0px)\",\n      borderRadius: \"10px\",\n      padding: \"25px\",\n      boxShadow: \"0 4px 6px rgba(0, 0, 0, 0.1)\",\n      width: \"100%\",\n      maxWidth: \"400px\",\n      textAlign: \"center\" // Center the content\n    },\n    heading: {\n      fontSize: \"35px\",\n      color: \"#363100\",\n      fontWeight: \"800\",\n      marginBottom: \"20px\"\n    },\n    logo: {\n      width: \"50px\",\n      height: \"50px\",\n      marginBottom: \"20px\" // Space below the logo\n    },\n    message: {\n      fontSize: \"16px\",\n      color: \"#363100\",\n      fontWeight: \"300\",\n      marginBottom: \"20px\"\n    },\n    button: {\n      padding: \"10px 20px\",\n      borderRadius: \"10px\",\n      backgroundColor: \"#C1B857\",\n      color: \"#363100\",\n      fontWeight: \"700\",\n      cursor: \"pointer\",\n      border: \"none\",\n      fontSize: \"16px\",\n      width: \"100%\"\n    },\n    input: {\n      padding: \"10px\",\n      borderRadius: \"10px\",\n      border: \"1px solid #C1B857\",\n      width: \"100%\",\n      fontSize: \"16px\",\n      marginBottom: \"20px\"\n    },\n    logoutButton: {\n      padding: \"10px 20px\",\n      borderRadius: \"10px\",\n      backgroundColor: \"#FF4D4D\",\n      color: \"white\",\n      fontWeight: \"700\",\n      cursor: \"pointer\",\n      border: \"none\",\n      fontSize: \"16px\",\n      width: \"100%\",\n      marginTop: \"20px\" // Space for logout button\n    }\n  };\n  const handleForgotPassword = e => {\n    e.preventDefault();\n    // Here, you would handle the logic for password recovery using the provided email\n    console.log(\"Password recovery requested for email:\", email);\n    // After submitting, redirect to a confirmation page or back to login\n    navigate(\"/\"); // Replace with the actual path after the recovery process\n  };\n  const handleLogout = () => {\n    // Clear the session (localStorage, sessionStorage, or a state management solution)\n    localStorage.removeItem(\"userToken\"); // Example: remove token or user data from localStorage\n    // Optionally clear other session data if needed\n    // localStorage.clear(); // Uncomment to clear all localStorage items\n\n    // Redirect the user to the login page\n    navigate(\"/\"); // Redirect to login page or home page\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: styles.background,\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      style: styles.formWrapper,\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        style: styles.formContainer,\n        children: [/*#__PURE__*/_jsxDEV(\"img\", {\n          src: \"cuisining-wordmark.png\",\n          alt: \"Success\",\n          style: styles.logo\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 108,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n          style: styles.heading,\n          children: \"Successful naka log in\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 111,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          style: styles.message,\n          children: \"Welcome sa luto luto\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 114,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n          onSubmit: handleForgotPassword,\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"email\",\n            placeholder: \"Enter your Gmail\",\n            value: email,\n            onChange: e => setEmail(e.target.value),\n            style: styles.input,\n            required: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 120,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"submit\",\n            style: styles.button,\n            children: \"Submit for Password Reset\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 128,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 119,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: handleLogout,\n          style: styles.logoutButton,\n          children: \"Log Out\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 134,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 104,\n    columnNumber: 5\n  }, this);\n};\n_s(SuccessPage, \"BtHh1nUgD6Q6OqHFh/Muz7TKLH4=\", false, function () {\n  return [useNavigate];\n});\n_c = SuccessPage;\nexport default SuccessPage;\nvar _c;\n$RefreshReg$(_c, \"SuccessPage\");","map":{"version":3,"names":["React","useState","useNavigate","jsxDEV","_jsxDEV","SuccessPage","_s","email","setEmail","navigate","styles","background","backgroundImage","backgroundSize","backgroundPosition","backgroundAttachment","height","width","formWrapper","display","justifyContent","alignItems","padding","minHeight","formContainer","backdropFilter","WebkitBackdropFilter","borderRadius","boxShadow","maxWidth","textAlign","heading","fontSize","color","fontWeight","marginBottom","logo","message","button","backgroundColor","cursor","border","input","logoutButton","marginTop","handleForgotPassword","e","preventDefault","console","log","handleLogout","localStorage","removeItem","style","children","src","alt","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","type","placeholder","value","onChange","target","required","onClick","_c","$RefreshReg$"],"sources":["C:/Users/markj/cuisining/src/components/Landing.jsx"],"sourcesContent":["import React, { useState } from \"react\";\r\nimport { useNavigate } from \"react-router-dom\"; // Use useNavigate instead of useHistory\r\n\r\nconst SuccessPage = () => {\r\n  const [email, setEmail] = useState(\"\");\r\n  const navigate = useNavigate(); // Hook for navigation\r\n\r\n  const styles = {\r\n    background: {\r\n      backgroundImage: \"url('lbg.png')\", // Replace with your image URL\r\n      backgroundSize: \"cover\",\r\n      backgroundPosition: \"center\",\r\n      backgroundAttachment: \"fixed\",\r\n      height: \"100%\",\r\n      width: \"100%\",\r\n    },\r\n    formWrapper: {\r\n      display: \"flex\",\r\n      justifyContent: \"center\",\r\n      alignItems: \"center\",\r\n      padding: \"20px\",\r\n      minHeight: \"100vh\",\r\n    },\r\n    formContainer: {\r\n      background: \"rgba(255, 255, 255, 0.7)\",\r\n      backdropFilter: \"blur(10px)\",\r\n      WebkitBackdropFilter: \"blur(0px)\",\r\n      borderRadius: \"10px\",\r\n      padding: \"25px\",\r\n      boxShadow: \"0 4px 6px rgba(0, 0, 0, 0.1)\",\r\n      width: \"100%\",\r\n      maxWidth: \"400px\",\r\n      textAlign: \"center\", // Center the content\r\n    },\r\n    heading: {\r\n      fontSize: \"35px\",\r\n      color: \"#363100\",\r\n      fontWeight: \"800\",\r\n      marginBottom: \"20px\",\r\n    },\r\n    logo: {\r\n      width: \"50px\",\r\n      height: \"50px\",\r\n      marginBottom: \"20px\", // Space below the logo\r\n    },\r\n    message: {\r\n      fontSize: \"16px\",\r\n      color: \"#363100\",\r\n      fontWeight: \"300\",\r\n      marginBottom: \"20px\",\r\n    },\r\n    button: {\r\n      padding: \"10px 20px\",\r\n      borderRadius: \"10px\",\r\n      backgroundColor: \"#C1B857\",\r\n      color: \"#363100\",\r\n      fontWeight: \"700\",\r\n      cursor: \"pointer\",\r\n      border: \"none\",\r\n      fontSize: \"16px\",\r\n      width: \"100%\",\r\n    },\r\n    input: {\r\n      padding: \"10px\",\r\n      borderRadius: \"10px\",\r\n      border: \"1px solid #C1B857\",\r\n      width: \"100%\",\r\n      fontSize: \"16px\",\r\n      marginBottom: \"20px\",\r\n    },\r\n    logoutButton: {\r\n      padding: \"10px 20px\",\r\n      borderRadius: \"10px\",\r\n      backgroundColor: \"#FF4D4D\",\r\n      color: \"white\",\r\n      fontWeight: \"700\",\r\n      cursor: \"pointer\",\r\n      border: \"none\",\r\n      fontSize: \"16px\",\r\n      width: \"100%\",\r\n      marginTop: \"20px\", // Space for logout button\r\n    },\r\n  };\r\n\r\n  const handleForgotPassword = (e) => {\r\n    e.preventDefault();\r\n    // Here, you would handle the logic for password recovery using the provided email\r\n    console.log(\"Password recovery requested for email:\", email);\r\n    // After submitting, redirect to a confirmation page or back to login\r\n    navigate(\"/\"); // Replace with the actual path after the recovery process\r\n  };\r\n\r\n  const handleLogout = () => {\r\n    // Clear the session (localStorage, sessionStorage, or a state management solution)\r\n    localStorage.removeItem(\"userToken\"); // Example: remove token or user data from localStorage\r\n    // Optionally clear other session data if needed\r\n    // localStorage.clear(); // Uncomment to clear all localStorage items\r\n    \r\n    // Redirect the user to the login page\r\n    navigate(\"/\"); // Redirect to login page or home page\r\n  };\r\n\r\n  return (\r\n    <div style={styles.background}>\r\n      <div style={styles.formWrapper}>\r\n        <div style={styles.formContainer}>\r\n          {/* Check mark logo */}\r\n          <img src=\"cuisining-wordmark.png\" alt=\"Success\" style={styles.logo} />\r\n\r\n          {/* Heading */}\r\n          <h2 style={styles.heading}>Successful naka log in</h2>\r\n\r\n          {/* Success message */}\r\n          <p style={styles.message}>\r\n            Welcome sa luto luto\r\n          </p>\r\n\r\n          {/* Forgot Password Form */}\r\n          <form onSubmit={handleForgotPassword}>\r\n            <input\r\n              type=\"email\"\r\n              placeholder=\"Enter your Gmail\"\r\n              value={email}\r\n              onChange={(e) => setEmail(e.target.value)}\r\n              style={styles.input}\r\n              required\r\n            />\r\n            <button type=\"submit\" style={styles.button}>\r\n              Submit for Password Reset\r\n            </button>\r\n          </form>\r\n\r\n          {/* Logout Button */}\r\n          <button onClick={handleLogout} style={styles.logoutButton}>\r\n            Log Out\r\n          </button>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default SuccessPage;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}